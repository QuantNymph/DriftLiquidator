"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.initialize = exports.getConfig = exports.configs = void 0;
exports.configs = {
    devnet: {
        ENV: 'devnet',
        PYTH_ORACLE_MAPPING_ADDRESS: 'BmA9Z6FjioHJPpjT39QazZyhDRUdZy2ezwx4GiDdE2u2',
        CLEARING_HOUSE_PROGRAM_ID: 'AsW7LnXB9UA1uec9wi9MctYTgTz7YH9snhxd16GsFaGX',
        USDC_MINT_ADDRESS: '8zGuJQqwhZafTah7Uc7Z4tXRnguqkn5KLFAP8oV6PHe2',
    },
    'mainnet-beta': {
        ENV: 'mainnet-beta',
        PYTH_ORACLE_MAPPING_ADDRESS: 'AHtgzX45WTKfkPG53L6WYhGEXwQkN1BVknET3sVsLL8J',
        CLEARING_HOUSE_PROGRAM_ID: 'dammHkt7jmytvbS3nHTxQNEcP59aE57nxwV21YdqEDN',
        USDC_MINT_ADDRESS: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',
    },
};
let currentConfig = exports.configs.devnet;
const getConfig = () => currentConfig;
exports.getConfig = getConfig;
/**
 * Allows customization of the SDK's environment and endpoints. You can pass individual settings to override the settings with your own presets.
 *
 * Defaults to master environment if you don't use this function.
 * @param props
 * @returns
 */
const initialize = (props) => {
    var _a, _b;
    //@ts-ignore
    if (props.env === 'master')
        return Object.assign(Object.assign({}, exports.configs['devnet']), ((_a = props.overrideEnv) !== null && _a !== void 0 ? _a : {}));
    currentConfig = Object.assign(Object.assign({}, exports.configs[props.env]), ((_b = props.overrideEnv) !== null && _b !== void 0 ? _b : {}));
    return currentConfig;
};
exports.initialize = initialize;
