/// <reference types="node" />
import { AccountSubscriber, UserAccountEvents, UserAccountSubscriber } from './types';
import { Program } from '@project-serum/anchor';
import StrictEventEmitter from 'strict-event-emitter-types';
import { EventEmitter } from 'events';
import { PublicKey } from '@solana/web3.js';
import { UserAccount, UserPositionsAccount } from '../types';
export declare class DefaultUserAccountSubscriber implements UserAccountSubscriber {
    isSubscribed: boolean;
    program: Program;
    eventEmitter: StrictEventEmitter<EventEmitter, UserAccountEvents>;
    authority: PublicKey;
    userDataAccountSubscriber: AccountSubscriber<UserAccount>;
    userPositionsAccountSubscriber: AccountSubscriber<UserPositionsAccount>;
    constructor(program: Program, authority: PublicKey);
    subscribe(): Promise<boolean>;
    fetch(): Promise<void>;
    unsubscribe(): Promise<void>;
    assertIsSubscribed(): void;
    getUserAccount(): UserAccount;
    getUserPositionsAccount(): UserPositionsAccount;
}
//# sourceMappingURL=defaultUserAccountSubscriber.d.ts.map